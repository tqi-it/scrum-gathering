name: CICD Python application

on:
  push:
    branches: [ "main" ]
    paths:
      -  'back/**'
  pull_request:
    branches: [ "main" ]
    paths:
    -  'back/**'

permissions:
  contents: read

jobs:

  run-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r back/app/requirements.txt

    - name: Test with pytest
      env:
        PYTHONPATH: back/app
      run: |
        pytest back/app/test/test_main.py

  build-and-publish:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: "./back"

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

   
      - name: Auto Increment Semver Action
        uses: MCKanpolat/auto-semver-action@1.0.5
        id: versioning
        with:
          releaseType: major 
          incrementPerCommit: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Next Release Number
        run: echo ${{ steps.versioning.outputs.version }}

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: 641427361254.dkr.ecr.us-east-2.amazonaws.com
          ECR_REPOSITORY: tqi-ecr
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:2.0.7 .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:2.0.7



  deploy:
    needs: [run-tests, build-and-publish]
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v1
        with:
            host: github.com
            private-key: ${{ secrets.SSH_PRIVATE_KEY }}
            
      - name: Clone repository
        run: git clone git@github.com:tqi-it/scrum-gathering-manifests.git
      
      - name: Replace version
        run: |
          cd scrum-gathering-manifests
          rm manifests/deployment.yaml && sed 's@TAG_REPLACE@'"2.0.7"'@' templates/deployment.tmp > manifests/deployment.yaml
          cat manifests/deployment.yaml | grep image
          git config --global user.email "viniciusgomes955@gmail.com"
          git config --global user.name "apolzek"
          git add .
          git commit -m "Update version $CI_PIPELINE_IID"
          git push